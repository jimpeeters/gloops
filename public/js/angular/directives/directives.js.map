{"version":3,"sources":["tooltip.js","smoothScroll.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"directives.js","sourcesContent":["gloopsApp.directive('tooltip', function(){\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs){\n            $(element).hover(function(){\n                // on mouseenter\n                $(element).tooltip('show');\n            }, function(){\n                // on mouseleave\n                $(element).tooltip('hide');\n            });\n        }\n    };\n});","/*\nA simple AngularJS directive to render a smooth scroll effect\nUsage: <element smooth-scroll target='id' [offset='value']></element>\n@author: Arnaud BRETON (arnaud@videonot.es)\nInspired by http://www.itnewb.com/tutorial/Creating-the-Smooth-Scroll-Effect-with-JavaScript\n*/\n\ngloopsApp.directive('smoothScroll', [\n  '$log', '$timeout', '$window', function($log, $timeout, $window) {\n    /*\n        Retrieve the current vertical position\n        @returns Current vertical position\n    */\n\n    var currentYPosition, elmYPosition, smoothScroll;\n    currentYPosition = function() {\n      if ($window.pageYOffset) {\n        return $window.pageYOffset;\n      }\n      if ($window.document.documentElement && $window.document.documentElement.scrollTop) {\n        return $window.document.documentElement.scrollTop;\n      }\n      if ($window.document.body.scrollTop) {\n        return $window.document.body.scrollTop;\n      }\n      return 0;\n    };\n    /*\n        Get the vertical position of a DOM element\n        @param eID The DOM element id\n        @returns The vertical position of element with id eID\n    */\n\n    elmYPosition = function(eID) {\n      var elm, node, y;\n      elm = document.getElementById(eID);\n      if (elm) {\n        y = elm.offsetTop;\n        node = elm;\n        while (node.offsetParent && node.offsetParent !== document.body) {\n          node = node.offsetParent;\n          y += node.offsetTop;\n        }\n        return y;\n      }\n      return 0;\n    };\n    /*\n        Smooth scroll to element with a specific ID without offset\n        @param eID The element id to scroll to\n        @param offSet Scrolling offset\n    */\n\n    smoothScroll = function(eID, offSet) {\n      var distance, i, leapY, speed, startY, step, stopY, timer, _results;\n      startY = currentYPosition();\n      stopY = elmYPosition(eID) - offSet;\n      distance = (stopY > startY ? stopY - startY : startY - stopY);\n      if (distance < 100) {\n        scrollTo(0, stopY);\n        return;\n      }\n      speed = Math.round(distance / 100);\n      if (speed >= 20) {\n        speed = 5;\n      }\n      step = Math.round(distance / 25);\n      leapY = (stopY > startY ? startY + step : startY - step);\n      timer = 0;\n      if (stopY > startY) {\n        i = startY;\n        while (i < stopY) {\n          setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);\n          leapY += step;\n          if (leapY > stopY) {\n            leapY = stopY;\n          }\n          timer++;\n          i += step;\n        }\n        return;\n      }\n      i = startY;\n      _results = [];\n      while (i > stopY) {\n        setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);\n        leapY -= step;\n        if (leapY < stopY) {\n          leapY = stopY;\n        }\n        timer++;\n        _results.push(i -= step);\n      }\n      return _results;\n    };\n    return {\n      restrict: 'A',\n      link: function(scope, element, attr) {\n        return element.bind('click', function() {\n          var offset;\n          if (attr.target) {\n            offset = attr.offset || 100;\n            $log.log('Smooth scroll: scrolling to', attr.target, 'with offset', offset);\n            return smoothScroll(attr.target, offset);\n          } else {\n            return $log.warn('Smooth scroll: no target specified');\n          }\n        });\n      }\n    };\n  }\n])"],"sourceRoot":"/source/"}